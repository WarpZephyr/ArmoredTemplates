//------------------------------------------------
//--- 010 Editor v13.0.1 Binary Template
//
//      File: AcColorSet.bt
//   Authors: WarpZephyr
//   Version: 
//   Purpose: Armored Core 4thgen AcColorSet structures.
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

#include "Colors.bt"
BigEndian();

enum <byte> ColorPattern
{
    Unknown = -1,
    Solid = 0,
    Pattern2 = 1,
    Pattern3 = 2,
    Pattern4 = 3,
    Pattern5 = 4,
    Pattern6 = 5,
    Pattern7 = 6,
    Pattern8 = 7,
    Pattern9 = 8,
    Pattern10 = 9,
    Pattern11 = 10,
    Pattern12 = 11
};

void AssertColorPattern(ColorPattern pattern)
{
    Assert(pattern > -2 && pattern < 12);
}

//------------------------------------------------

typedef struct
{
    ColorPattern All; AssertColorPattern(All);
    ColorPattern AllFrames; AssertColorPattern(AllFrames);
    ColorPattern AllUnits; AssertColorPattern(AllUnits);
    ColorPattern AllStabilizers; AssertColorPattern(AllStabilizers);
    ColorPattern Head; AssertColorPattern(Head);
    ColorPattern Core; AssertColorPattern(Core);
    ColorPattern ArmRight; AssertColorPattern(ArmRight);
    ColorPattern ArmLeft; AssertColorPattern(ArmLeft);
    ColorPattern Legs; AssertColorPattern(Legs);
    ColorPattern ArmUnitRight; AssertColorPattern(ArmUnitRight);
    ColorPattern ArmUnitLeft; AssertColorPattern(ArmUnitLeft);
    ColorPattern BackUnitRight; AssertColorPattern(BackUnitRight);
    ColorPattern BackUnitLeft; AssertColorPattern(BackUnitLeft);
    ColorPattern ShoulderUnit; AssertColorPattern(ShoulderUnit);
    ColorPattern HangerUnitRight; AssertColorPattern(HangerUnitRight);
    ColorPattern HangerUnitLeft; AssertColorPattern(HangerUnitLeft);
    ColorPattern AllHeadStabilizers; AssertColorPattern(AllHeadStabilizers);
    ColorPattern AllCoreStabilizers; AssertColorPattern(AllCoreStabilizers);
    ColorPattern AllArmStabilizers; AssertColorPattern(AllArmStabilizers);
    ColorPattern AllLegStabilizers; AssertColorPattern(AllLegStabilizers);
    ColorPattern HeadTopStabilizer; AssertColorPattern(HeadTopStabilizer);
    ColorPattern HeadRightSideStabilizer; AssertColorPattern(HeadRightSideStabilizer);
    ColorPattern HeadLeftSideStabilizer; AssertColorPattern(HeadLeftSideStabilizer);
    ColorPattern CoreUpperRightSideStabilizer; AssertColorPattern(CoreUpperRightSideStabilizer);
    ColorPattern CoreUpperLeftSideStabilizer; AssertColorPattern(CoreUpperLeftSideStabilizer);
    ColorPattern CoreLowerRightSideStabilizer; AssertColorPattern(CoreLowerRightSideStabilizer);
    ColorPattern CoreLowerLeftSideStabilizer; AssertColorPattern(CoreLowerLeftSideStabilizer);
    ColorPattern ArmRightStabilizer; AssertColorPattern(ArmRightStabilizer);
    ColorPattern ArmLeftStabilizer; AssertColorPattern(ArmLeftStabilizer);
    ColorPattern LegsBackStabilizer; AssertColorPattern(LegsBackStabilizer);
    ColorPattern LegsUpperRightSideStabilizer; AssertColorPattern(LegsUpperRightSideStabilizer);
    ColorPattern LegsUpperLeftSideStabilizer; AssertColorPattern(LegsUpperLeftSideStabilizer);
    ColorPattern LegsMiddleRightSideStabilizer; AssertColorPattern(LegsMiddleRightSideStabilizer);
    ColorPattern LegsMiddleLeftSideStabilizer; AssertColorPattern(LegsMiddleLeftSideStabilizer);
    ColorPattern LegsLowerRightSideStabilizer; AssertColorPattern(LegsLowerRightSideStabilizer);
    ColorPattern LegsLowerLeftSideStabilizer; AssertColorPattern(LegsLowerLeftSideStabilizer);
} PatternSelection <bgcolor=cGreen, read=ReadPatternSelection>;

string ReadPatternSelection(PatternSelection& selection)
{
    string str;
    return SPrintf(str, "Selections: %d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d\\%d",
            selection.All, selection.AllFrames, selection.AllUnits,
            selection.AllStabilizers, selection.Head, selection.Core,
            selection.ArmRight, selection.ArmLeft, selection.Legs,
            selection.ArmUnitRight, selection.ArmUnitLeft, selection.BackUnitRight,
            selection.BackUnitLeft, selection.ShoulderUnit, selection.HangerUnitRight,
            selection.HangerUnitLeft, selection.AllHeadStabilizers, selection.AllCoreStabilizers,
            selection.AllArmStabilizers, selection.AllLegStabilizers, selection.HeadTopStabilizer,
            selection.HeadRightSideStabilizer, selection.HeadLeftSideStabilizer, selection.CoreUpperRightSideStabilizer,
            selection.CoreUpperLeftSideStabilizer, selection.CoreLowerRightSideStabilizer, selection.CoreLowerLeftSideStabilizer,
            selection.ArmRightStabilizer, selection.ArmLeftStabilizer, selection.LegsBackStabilizer,
            selection.LegsUpperRightSideStabilizer, selection.LegsUpperLeftSideStabilizer, selection.LegsMiddleRightSideStabilizer,
            selection.LegsMiddleLeftSideStabilizer, selection.LegsLowerRightSideStabilizer, selection.LegsLowerLeftSideStabilizer);
}

typedef struct
{
    ColorSet HeadColor;
    ColorSet CoreColor;
    ColorSet ArmRightColor;
    ColorSet ArmLeftColor;
    ColorSet LegsColor;
} AllFrameColorSets <bgcolor=cLtGreen>;

typedef struct
{
    ColorSet ArmUnitRightColor;
    ColorSet ArmUnitLeftColor;
    ColorSet BackUnitRightColor;
    ColorSet BackUnitLeftColor;
    ColorSet ShoulderUnitColor;
    ColorSet HangarUnitRightColor;
    ColorSet HangarUnitLeftColor;
} AllUnitColorSets <bgcolor=cLtGreen>;

typedef struct
{
    ColorSet HeadTopStabilizerColor;
    ColorSet HeadRightSideStabilizerColor;
    ColorSet HeadLeftSideStabilizerColor;
} AllHeadStabilizerColorSets <bgcolor=cLtGreen>;

typedef struct
{
    ColorSet CoreUpperRightSideStabilizerColor;
    ColorSet CoreUpperLeftSideStabilizerColor;
    ColorSet CoreLowerRightSideStabilizerColor;
    ColorSet CoreLowerLeftSideStabilizerColor;
} AllCoreStabilizerColorSets <bgcolor=cLtGreen>;

typedef struct
{
    ColorSet ArmRightStabilizerColor;
    ColorSet ArmLeftStabilizerColor;
} AllArmStabilizerColorSets <bgcolor=cLtGreen>;

typedef struct
{
    ColorSet LegsBackStabilizerColor;
    ColorSet LegsUpperRightSideStabilizerColor;
    ColorSet LegsUpperLeftSideStabilizerColor;
    ColorSet LegsUpperRightBackStabilizerColor;
    ColorSet LegsUpperLeftBackStabilizerColor;
    ColorSet LegsMiddleRightSideStabilizerColor;
    ColorSet LegsMiddleLeftSideStabilizerColor;
    ColorSet LegsMiddleRightBackStabilizerColor;
    ColorSet LegsMiddleLeftBackStabilizerColor;
    ColorSet LegsLowerRightSideStabilizerColor;
    ColorSet LegsLowerLeftSideStabilizerColor;
    ColorSet LegsLowerRightBackStabilizerColor;
    ColorSet LegsLowerLeftBackStabilizerColor;
} AllLegStabilizerColorSets <bgcolor=cLtGreen>;

typedef struct
{
    AllHeadStabilizerColorSets AllStabilizerHeadColors;
    AllCoreStabilizerColorSets AllStabilizerCoreColors;
    AllArmStabilizerColorSets AllStabilizerArmColors;
    AllLegStabilizerColorSets AllStabilizerLegColors;
} AllStabilizerColorSets <bgcolor=cLtGreen>;

typedef struct
{
    AllFrameColorSets AllFrameColors;
    AllUnitColorSets AllUnitColors;
    AllStabilizerColorSets AllStabilizerColors;
} AllColorSets <bgcolor=cLtGreen>;

typedef struct
{
    AllColorSets AllColors;
    PatternSelection patternSelections;
    ColorRGBA EyeColor;
} AcColorSet <bgcolor=cLtGreen>;