//------------------------------------------------
//--- 010 Editor v13.0.1 Binary Template
//
//      File: T.bt
//   Authors: WarpZephyr
//   Version: 
//   Purpose: Armored Core T archive files
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

#include "../Util.bt"
LittleEndian();
#define BLOCK_SIZE 0x800

//------------------------------------------------

typedef struct
{
    short fileCount;
    short unk04;
} Header <bgcolor=cLtRed, optimize=false>;

typedef struct
{
    ushort block_count;
} FileEntry <bgcolor=cLtGreen, read=ReadFileEntry>;

string ReadFileEntry(FileEntry& entry)
{
    local string str;
    return SPrintf(str, "%d", entry.block_count);
}

typedef struct (int length)
{
    ubyte data[length];
} File <bgcolor=cAqua>;

//------------------------------------------------

Header header;
FileEntry entries[header.fileCount];
Align(BLOCK_SIZE);

struct
{
    local int i = 0;
    local int length = 0;
    for (i = 0; i < header.fileCount; i++)
    {
        length = (entries[i].block_count * BLOCK_SIZE) - FTell();

        Printf("%i\n", length);

        if (length > 0)
            File file(length);
    }
} Files;