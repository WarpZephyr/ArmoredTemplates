//------------------------------------------------
//--- 010 Editor v13.0.1 Binary Template
//
//      File: KeyGuide.bt
//   Authors: WarpZephyr
//   Version: 
//   Purpose: Armored Core KeyGuide files.
//  Category: 
// File Mask: keyguide.bin, skeyguide.bin
//  ID Bytes: 
//   History: 
//------------------------------------------------

typedef struct
{
    ubyte unk00 <hidden=true>; Assert(unk00 == 0);
    ubyte littleEndian();
    ubyte bigEndian();
    if (littleEndian == 1)
    {
        LittleEndian();
    }
    else if (bigEndian == 1)
    {
        BigEndian();
    }
    else
    {
        Assert(false);
    }
    ubyte unk03 <hidden=true>; Assert(unk03 == 0);

    uint unk04 <hidden=true>; Assert(unk04 == 0);
    uint entryCount;
    uint unk0C <hidden=true>; Assert(unk0C == 0);
    uint entryCount2; Assert(entryCount2 == entryCount);
    uint unk14 <hidden=true>; Assert(unk14 == 0);
    uint entryCount3;
    uint unk1C <hidden=true>; Assert(unk1C == 0);
} Header <bgcolor=cLtRed>;

typedef struct
{
    uint id;
    uint unk04; Assert(unk04 == 1);
    uint index;
    uint unk0C <hidden=true>; Assert(unk0C == 0);
} Entry <bgcolor=cLtGreen, read=ReadEntry, optimize=false>;

string ReadEntry(Entry& entry)
{
    string str;
    return SPrintf(str, "%i \\ %i \\ %i",
    entry.id, entry.unk04, entry.index);
}

typedef struct
{
    uint unk00;
    uint unk04;
    uint unk08 <hidden=true>; Assert(unk08 == 0);
    uint unk0C <hidden=true>; Assert(unk0C == 0);
} Entry2 <bgcolor=cGreen, read=ReadEntry2, optimize=false>;

string ReadEntry2(Entry2& entry)
{
    string str;
    return SPrintf(str, "%i \\ %i",
    entry.unk00, entry.unk04);
}

typedef struct
{
    uint unk00;
    uint unk04 <hidden=true>; Assert(unk04 == 0);
} Entry3 <bgcolor=cDkGreen, read=ReadEntry3, optimize=false>;

string ReadEntry3(Entry3& entry)
{
    string str;
    return SPrintf(str, "%i",
    entry.unk00);
}

//------------------------------------------------

Header header;
Entry entries[header.entryCount];
Entry2 entries2[header.entryCount2];
Entry3 entries3[header.entryCount3];