//------------------------------------------------
//--- 010 Editor v13.0.1 Binary Template
//
//      File: Leg.bt
//   Authors: WarpZephyr
//   Version: 1.1.0
//   Purpose: Reading Armored Core 4 Leg parts.
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

BigEndian();

//-------------------------------------------------

typedef struct 
{
    DefenseComponent defense;
    PAComponent primal_armor;
    FrameComponent frame;    
    LegType Leg_Type;
    Motion Motion_Type; AssertMotion(Motion_Type);
    ushort unk1E; // Unknown, always 0, may be CoreTurnRange.
    ushort Maximum_Load;
    ushort Load;
    ushort Tune_Max_Load;
    ushort Tune_Efficiency_Load;
    int Back_Unit_Angle;
    int Movement_Ability;
    int Turning_Ability;
    int Braking_Ability;
    int Jumping_Ability;
    int Land_Stability;
    int Hit_Stability;
    int Shoot_Stability;
    int Tune_Max_Movement_Ability;
    int Tune_Max_Turning_Ability;
    int Tune_Max_Braking_Ability;
    int Tune_Max_Jumping_Ability;
    int Tune_Max_Land_Stability;
    int Tune_Max_Hit_Stability;
    int Tune_Max_Shoot_Stability;
    ushort Tune_Efficiency_Movement_Ability;
    ushort Tune_Efficiency_Turning_Ability;
    ushort Tune_Efficiency_Braking_Ability;
    ushort Tune_Efficiency_Jumping_Ability;
    ushort Tune_Efficiency_Land_Stability;
    ushort Tune_Efficiency_Hit_Stability;
    ushort Tune_Efficiency_Shoot_Stability;
    ushort unk70; // Unknown, always 0, may be CoreTurnRange.
    BoosterComponent Horizontal_Boost;
    BoosterComponent Vertical_Boost;
    BoosterComponent Quick_Boost;
    short StbzrBackX;
    short StbzrBackY;
    short StbzrUpX;
    short StbzrUpY;
    short StbzrMidX;
    short StbzrMidY;
    short StbzrLowX;
    short StbzrLowY;
    short StbzrUpRX;
    short StbzrUpRY;
    short StbzrMidRX;
    short StbzrMidRY;
    short StbzrLowRX;
    short StbzrLowRY;
} Leg <bgcolor=cLtYellow>;